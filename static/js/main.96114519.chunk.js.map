{"version":3,"sources":["DataSource.js","ContentCard.js","LandPriceCard.js","YahooFinanceCard.js","ComparisonCard.js","App.js","serviceWorker.js","index.js"],"names":["DataModel","data","console","log","code","json","this","result","instance","DataSource","ContentCard","props","period","handle3Month","handle3MonthButton","bind","handle6Month","handle6MonthButton","handle1Year","handle1YearButton","handle3Year","handle3YearButton","handle5Year","handle5YearButton","handle10Year","handle10YearButton","handleMax","handleMaxButton","indices","values_1","values_2","i","push","toString","Math","random","toFixed","values","getValues","length","labels","datasets","label","fill","backgroundColor","borderColor","borderWidth","pointRadius","hitRadius","cubicInterpolationMode","lineTension","spanGaps","line","chartFontSize","isTablet","isMobile","getData","height","options","legend","display","scales","xAxes","gridLines","drawBorder","drawOnChartArea","lineWidth","zeroLineWidth","ticks","fontSize","autoSkip","maxTicksLimit","minRotation","maxRotation","yAxes","animation","duration","style","color","style_card_title","marginTop","marginBottom","marginLeft","style_period_button","lineHeight","textAlign","isPeriodShown","undefined","width","Button","variant","onClick","Card","Body","padding","Title","title","Text","text","setState","proxyUrl","shared","init","state","codes","index","fetchYahooFinance","fetchLandPrice","fetch","response","load","encodeURI","begin_date","Date","parse","end_date","now","targetUrl","x","XMLHttpRequest","open","getProxy","self","onload","onerror","status","decodeURI","JSON","responseText","chart","store","setRequestHeader","send","timestamp","d","month","getMonth","day","getDate","year","getFullYear","join","React","Component","LandPriceCard","prices","YahooFinanceCard","fetchData","prevDate","getPrevDate","adjclose","indicators","date","formatDate","parseFloat","ComparisonCard","value","data_1","data_2","key","biggerMinDate","ts_index","v","normalize","arr","is_std","mean","d3","std","App","dow_jones_index_card","kospi_index_card","exchange_rate_card","land_price_card","gold_index_card","isProduction","isLandShown","today","app_title","class_app_header","className","name","content","Navbar","expand","Brand","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.96114519.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet useProxy = false;\r\nlet isProduction = true;\r\nlet isLandShown = true;\r\n\r\nexport class DataModel {\r\n  static instance = null;\r\n  data = {}\r\n\r\n  constructor() {\r\n    console.log(useProxy ? 'enabled' : 'disabled');\r\n  }\r\n\r\n  isProduction() {\r\n    return isProduction;\r\n  }\r\n\r\n  isLandShown() {\r\n    return isLandShown;\r\n  }\r\n\r\n  init() {}\r\n\r\n  static shared() {\r\n    if (DataModel.instance == null) {\r\n      DataModel.instance = new DataModel();\r\n    }\r\n\r\n    return this.instance;\r\n  }\r\n\r\n  store(code, json) {\r\n    console.log(code, 'is stored');\r\n    this.data[code] = json;\r\n  }\r\n\r\n  load(code) {\r\n    var result = this.data[code];\r\n    if (result != null) {\r\n      console.log(code, 'is loaded');\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nclass DataSource extends React.Component {\r\n  proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    DataModel.shared().init();\r\n\r\n    this.state = {\r\n      data: [],\r\n      period: '1y'\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  getProxy() {\r\n    if (useProxy) {\r\n      return this.proxyUrl;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  fetchData(codes) {\r\n    for (var index in codes) {\r\n      var code = codes[index];\r\n\r\n      if (code === 'chartGetHousePrice') {\r\n        this.fetchLandPrice();\r\n        continue;\r\n      }\r\n\r\n      this.fetchYahooFinance(code);\r\n    }\r\n  }\r\n\r\n  async fetchLandPrice() {\r\n    try {\r\n      const response = await fetch(`https://api.jonghyunho.com/v1/chartGetHousePrice`);\r\n      const json = await response.json();\r\n      this.setState({ data: json });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  fetchYahooFinance(code) {\r\n    var json = DataModel.shared().load(code);\r\n    if (json != null) {\r\n      console.log('cache hit', code);\r\n      this.setState({ data: json });\r\n      return;\r\n    }\r\n\r\n    console.log('fetching', code);\r\n    code = encodeURI(code);\r\n\r\n    var begin_date = (Date.parse('2000-01-01') / 1000).toString();\r\n    var end_date = Date.now().toString();\r\n\r\n    var targetUrl = 'https://query1.finance.yahoo.com/v8/finance/chart/' + code + '?period1=' + begin_date + '&period2=' + end_date + '&interval=1d';\r\n\r\n    var x = new XMLHttpRequest();\r\n    x.open('GET', this.getProxy() + targetUrl);\r\n\r\n    var self = this;\r\n    x.onload = x.onerror = function() {\r\n      if (x.status === 404) return;\r\n      code = decodeURI(code);\r\n      var result = JSON.parse('{ \"'+ code +'\" : ' + x.responseText + '}');\r\n      result[code] = result[code].chart.result[0];\r\n\r\n      DataModel.shared().store(code, result[code]);\r\n      self.setState({ data: result })\r\n    };\r\n    x.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n    x.send('');\r\n  }\r\n\r\n  formatDate(timestamp) {\r\n    var d = new Date(timestamp * 1000),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n  getPrevDate(period) {\r\n    if (period === '3m') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 3) / 1000;\r\n    } else if (period === '6m') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 6) / 1000;\r\n    } else if (period === '1y') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 12) / 1000;\r\n    } else if (period === '3y') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 12 * 3) / 1000;\r\n    } else if (period === '5y') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 12 * 5) / 1000;\r\n    } else if (period === '10y') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 12 * 10) / 1000;\r\n    }\r\n    return Date.parse('2000-01-01') / 1000;\r\n  }\r\n}\r\n\r\nexport function formatDate(timestamp) {\r\n  var d = new Date(timestamp * 1000),\r\n  month = '' + (d.getMonth() + 1),\r\n  day = '' + d.getDate(),\r\n  year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nexport default DataSource;","import React from 'react';\r\n\r\nimport { isMobile, isTablet } from 'react-device-detect';\r\nimport { Button, Card, Nav } from 'react-bootstrap';\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport DataSource from './DataSource';\r\n\r\nclass ContentCard extends DataSource {\r\n  period = '1y';\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handle3Month = this.handle3MonthButton.bind(this);\r\n    this.handle6Month = this.handle6MonthButton.bind(this);\r\n    this.handle1Year = this.handle1YearButton.bind(this);\r\n    this.handle3Year = this.handle3YearButton.bind(this);\r\n    this.handle5Year = this.handle5YearButton.bind(this);\r\n    this.handle10Year = this.handle10YearButton.bind(this);\r\n    this.handleMax = this.handleMaxButton.bind(this);\r\n  }\r\n\r\n  getValues() {\r\n    var indices = [];\r\n    var values_1 = [];\r\n    var values_2 = [];\r\n    for (var i = 0; i < 10; i++) {\r\n      indices.push(i.toString());\r\n      values_1.push((Math.random() * 50).toFixed(2));\r\n      values_2.push((Math.random() * 50).toFixed(2));\r\n    }\r\n\r\n    return [indices, values_1, values_2];\r\n  }\r\n\r\n  static defaultProps() {\r\n    return {\r\n      isPeriodShown: 'true'\r\n    }\r\n  }\r\n\r\n  getData() {\r\n    var values = this.getValues();\r\n    if (values[0].length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const data = {\r\n      labels: values[0],\r\n      datasets: [\r\n        {\r\n          label: '',\r\n          data: values[1],\r\n          fill: false,\r\n          backgroundColor: '#1e6eff',\r\n          borderColor: '#1e6eff',\r\n          borderWidth: 1.5,\r\n          pointRadius: 0,\r\n          hitRadius: 5,\r\n          cubicInterpolationMode: 'monotone',\r\n          lineTension: 0.1,\r\n          spanGaps: true\r\n        }\r\n      ]\r\n    };\r\n\r\n    return data    \r\n  }\r\n\r\n  render() {\r\n    var chartFontSize = 16;\r\n    if (isTablet);\r\n    if (isMobile) chartFontSize = 8;\r\n\r\n    let line;\r\n    let data = this.getData();\r\n    if (data != null) {\r\n      line =\r\n        <Line\r\n          data={data}\r\n          height={150}\r\n          options={{\r\n            legend: {\r\n              display: false\r\n            },\r\n            scales: {\r\n              xAxes: [{\r\n                gridLines: {\r\n                  drawBorder: true,\r\n                  drawOnChartArea: true,\r\n                  lineWidth: 0.0,\r\n                  zeroLineWidth: 0.5\r\n                },\r\n                ticks: {\r\n                  fontSize: chartFontSize,\r\n                  autoSkip: true,\r\n                  maxTicksLimit: 4,\r\n                  minRotation: 0,\r\n                  maxRotation: 0\r\n                }\r\n              }],\r\n              yAxes: [{\r\n                ticks: {\r\n                  fontSize: chartFontSize\r\n                },\r\n                gridLines: {\r\n                  drawOnChartArea: true,\r\n                  lineWidth: 0.2,\r\n                  zeroLineWidth: 0.5\r\n                }\r\n              }]\r\n            },\r\n            animation: {\r\n              duration: 0\r\n            }\r\n        }}></Line>\r\n    } else {\r\n      line = <h6 style={{ color:'#333333' }}>데이터 로딩 중...</h6>\r\n    }\r\n\r\n    var style_card_title = { marginTop:'0.15rem', marginBottom:'0.5rem', marginLeft:'0.15rem'};\r\n    if (isTablet);\r\n    if (isMobile) style_card_title = { fontSize:'12px', marginTop:'0.15rem', marginBottom:'0.5rem', marginLeft:'0.15rem'};\r\n\r\n    var style_period_button = { fontSize:'16px', height:'25px', lineHeight:'13px', textAlign:'center' };\r\n    if (isTablet);\r\n    if (isMobile) style_period_button = { fontSize:'6px', height:'20px', lineHeight:'6px', textAlign:'center' };\r\n\r\n    let period;\r\n    if (this.props.isPeriodShown === 'true' || this.props.isPeriodShown === undefined) {\r\n      period =\r\n        <>\r\n          <div style={{ width:'100%', height:'0.5rem' }}></div>\r\n          <center>\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle3Month}>3개월</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle6Month}>6개월</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle1Year}>1년</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle3Year}>3년</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle5Year}>5년</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle10Year}>10년</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handleMax}>최대</Button>{' '}\r\n          </center>\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width:'96%', marginBottom:'10px', marginLeft:'2%' }}>\r\n          <Card.Body style={{ padding:'0.75em'}}>\r\n            <Card.Title style={style_card_title}>{this.props.title}</Card.Title>\r\n            <Card.Text style={{ color:'#999999', marginLeft:'0.15rem', marginBottom:'1.0rem' }}>{this.props.text}</Card.Text>\r\n            <Card.Text></Card.Text>\r\n            { line }\r\n            { period }\r\n            <div style={{ width:'100%', height:'0.15rem' }}></div>\r\n          </Card.Body>\r\n        </Card>\r\n    )\r\n  }\r\n\r\n  handle3MonthButton() { this.setState({ period: '3m' }); }\r\n  handle6MonthButton() { this.setState({ period: '6m' }); }\r\n  handle1YearButton() { this.setState({ period: '1y' }); }\r\n  handle3YearButton() { this.setState({ period: '3y' }); }\r\n  handle5YearButton() { this.setState({ period: '5y' }); }\r\n  handle10YearButton() { this.setState({ period: '10y' }); }\r\n  handleMaxButton() { this.setState({ period: 'Max' }); }\r\n}\r\n\r\nexport default ContentCard;","import ContentCard from './ContentCard';\r\n\r\nclass LandPriceCard extends ContentCard {\r\n  constructor() {\r\n    super();\r\n    this.state = { data: [] };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.fetchLandPrice();\r\n  }\r\n\r\n  getValues() {\r\n    var indices = [];\r\n    var values = [];\r\n\r\n    var result = this.state.data;\r\n    if (result.length === 0) return [indices, values]\r\n\r\n    for (var index in result.prices) {\r\n      indices.push(result.prices[index][0]);\r\n      values.push(result.prices[index][1].toFixed(2));\r\n    }\r\n\r\n    return [indices, values];\r\n  }\r\n}\r\n\r\nexport default LandPriceCard;","import './App.css';\r\n\r\nimport ContentCard from './ContentCard';\r\n\r\nclass YahooFinanceCard extends ContentCard {\r\n  async componentDidMount() {\r\n    this.fetchData([this.props.code]);\r\n    return;\r\n  }\r\n\r\n  getValues() {\r\n    let code = this.props.code;\r\n\r\n    var indices = [];\r\n    var values = [];\r\n\r\n    var result = this.state.data;\r\n    if (result.length === 0) return [indices, values];\r\n\r\n    result = result[code];\r\n\r\n    let prevDate = this.getPrevDate(this.state.period);\r\n    var adjclose = result.indicators.adjclose[0].adjclose;\r\n\r\n    for (var index in result.timestamp) {\r\n      var date = result.timestamp[index];\r\n      if (date < prevDate) continue;\r\n\r\n      indices.push(this.formatDate(date));\r\n      values.push(parseFloat(adjclose[index]).toFixed(2));\r\n    }\r\n\r\n    return [indices,values];\r\n  }\r\n}\r\n\r\nexport default YahooFinanceCard;","import './App.css';\r\n\r\nimport ContentCard from './ContentCard';\r\n\r\nimport * as d3 from 'd3';\r\n\r\nclass ComparisonCard extends ContentCard {\r\n  codes = ['^KS11','KRW=X'];\r\n  json = {}\r\n  value = {}\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      period: '1y',\r\n      data_1: [],\r\n      data_2: []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.fetchData(this.codes);\r\n    return;\r\n  }\r\n\r\n  getValues() {\r\n    let codes = this.codes;\r\n\r\n    var indices = [];\r\n    var values_1 = [];\r\n    var values_2 = [];\r\n\r\n    var response = this.state.data;\r\n\r\n    for (var key in response) {\r\n      this.json[key] = response[key];\r\n    }\r\n\r\n    for (var index in codes) {\r\n      var code = codes[index];\r\n      var result = this.json[code];\r\n      if (result === undefined) {\r\n        return [[], [], []];\r\n      }\r\n    }\r\n\r\n    var biggerMinDate = 0;\r\n\r\n    for (index in codes) {\r\n      code = codes[index];\r\n      result = this.json[code];\r\n      var adjclose = result.indicators.adjclose[0].adjclose;\r\n\r\n      if (result.timestamp.length > 0) {\r\n        if (biggerMinDate < result.timestamp[0]) {\r\n          biggerMinDate = result.timestamp[0];\r\n        }\r\n      }\r\n\r\n      for (var ts_index in result.timestamp) {\r\n        var date = result.timestamp[ts_index];\r\n        if (index == 0) {\r\n          this.value[date] = [parseFloat(adjclose[ts_index]).toFixed(2) * 1, undefined];\r\n        } else {\r\n          var v = this.value[date];\r\n          if (v != undefined) v = v[0];\r\n          this.value[date] = [v, parseFloat(adjclose[ts_index]).toFixed(2) * 1];\r\n        }\r\n      }\r\n    }\r\n\r\n    let prevDate = this.getPrevDate(this.state.period);\r\n\r\n    for (date in this.value) {\r\n      if (date < prevDate) continue;\r\n      if (date < biggerMinDate) continue;\r\n      indices.push(this.formatDate(date));\r\n\r\n      var values = this.value[date];\r\n      values_1.push(values[0]);\r\n      values_2.push(values[1]);\r\n    }\r\n\r\n    values_1 = this.normalize(values_1);\r\n    values_2 = this.normalize(values_2);\r\n\r\n    return [indices, values_1, values_2];\r\n  }\r\n\r\n  normalize(arr, is_std = true) {\r\n    var mean = d3.mean(arr);\r\n    var std = d3.deviation(arr);\r\n\r\n    for (var index in arr) {\r\n      var value = arr[index];\r\n      arr[index] = (value - mean) / (is_std ? std : 1.0);\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  getData() {\r\n    var values = this.getValues();\r\n    if (values[0].length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const data = {\r\n      labels: values[0],\r\n      datasets: [\r\n        {\r\n          label: '코스피',\r\n          data: values[1],\r\n          fill: false,\r\n          backgroundColor: '#1e6eff',\r\n          borderColor: '#1e6eff',\r\n          borderWidth: 1.5,\r\n          pointRadius: 0,\r\n          hitRadius: 2,\r\n          cubicInterpolationMode: 'monotone',\r\n          lineTension: 0.1,\r\n          spanGaps: true\r\n        },\r\n        {\r\n          label: '환율',\r\n          data: values[2],\r\n          fill: false,\r\n          backgroundColor: '#ff7245',\r\n          borderColor: '#ff7245',\r\n          borderWidth: 1.5,\r\n          pointRadius: 0,\r\n          hitRadius: 2,\r\n          cubicInterpolationMode: 'monotone',\r\n          lineTension: 0.1,\r\n          spanGaps: true\r\n        }\r\n      ]\r\n    };\r\n\r\n    return data\r\n  }\r\n}\r\n\r\nexport default ComparisonCard;","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n//import { render } from '@testing-library/react';\nimport MetaTags from 'react-meta-tags';\nimport { isMobile, isTablet } from 'react-device-detect';\n\nimport './App.css';\n\nimport ContentCard from './ContentCard';\nimport LandPriceCard from './LandPriceCard';\n\nimport { DataModel, formatDate } from './DataSource';\n\nimport YahooFinanceCard from './YahooFinanceCard';\nimport ComparisonCard from './ComparisonCard';\n\nfunction App() {\n  let dow_jones_index_card;\n  let kospi_index_card;\n  let exchange_rate_card;\n  let land_price_card;\n  let gold_index_card;\n\n  if (DataModel.shared().isProduction()) {\n    if (DataModel.shared().isLandShown()) {\n      land_price_card = <LandPriceCard title='서울 부동산 매매가격지수' text='서울 부동산 매매 가격의 등락을 시각화한다.' isPeriodShown='false'></LandPriceCard>\n    }\n\n    dow_jones_index_card = <YahooFinanceCard code='^DJI' title='다우존스 지수' text='다우존스 지수를 시각화한다.'></YahooFinanceCard>\n    kospi_index_card = <YahooFinanceCard code='^KS11' title='코스피 지수' text='코스피 지수를 시각화한다.'></YahooFinanceCard>\n    exchange_rate_card = <YahooFinanceCard code='KRW=X' title='환율' text='원/달러 환율'></YahooFinanceCard>\n    gold_index_card = <YahooFinanceCard code='GC=F' title='금 지수' text='금 지수를 시각화한다.'></YahooFinanceCard>\n  } else {\n    kospi_index_card = <YahooFinanceCard code='^KS11' title='코스피 지수' text='코스피 지수를 시각화한다.'></YahooFinanceCard>\n  }\n\n  let today = formatDate(Date.now() / 1000);\n  var app_title = <h3>{today}</h3>;\n  if (isTablet) ;\n  else if (isMobile) app_title = <h6>{today}</h6>;\n\n  var class_app_header = 'App-header';\n  if (isTablet) ;\n  else if (isMobile) class_app_header = 'Mobile-App-header';\n\n  return (\n    <div className=\"App\">\n      <MetaTags>\n        <meta name='viewport' content='width=device-width, user-scalable=no'/>\n      </MetaTags>\n      <header className={class_app_header}>\n        <Navbar expand='lg' style={{ padding:'0.5rem 2.5%' }}>\n          <Navbar.Brand href=\"#\">{app_title}</Navbar.Brand>\n        </Navbar>\n        { land_price_card }\n        { kospi_index_card }\n        { dow_jones_index_card }\n        { exchange_rate_card }\n        { gold_index_card }\n        <ComparisonCard code='^KS11' title='코스피와 환율' text='코스피와 환율'></ComparisonCard>\n        <ContentCard title='경제 지표의 상관관계 (준비중)' text='경제 지표를 상관관계지수를 통해 시각화한다.'></ContentCard>\n        <ContentCard title='주식과 부동산 (준비중)' text='주식과 부동산 어느 지표가 더 저평가 되어 있나?'></ContentCard>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}