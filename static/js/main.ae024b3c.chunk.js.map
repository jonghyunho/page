{"version":3,"sources":["DataSource.js","ContentCard.js","LandPriceCard.js","YahooFinanceCard.js","ComparisonCard.js","App.js","serviceWorker.js","index.js"],"names":["RequestData","c","h","code","undefined","handler","this","DataModel","proxyUrl","data","timerInterval","timerLongInterval","requestedCode","fetchingCode","console","log","window","setTimeout","timerHandler","self","request","shift","handleResponse","fetchYahooFinance","encodeURI","begin_date","Date","parse","toString","end_date","now","targetUrl","x","XMLHttpRequest","open","getProxy","onload","onerror","status","decodeURI","result","JSON","responseText","chart","setRequestHeader","send","json","push","instance","DataSource","ContentCard","props","period","handle3Month","handle3MonthButton","bind","handle6Month","handle6MonthButton","handle1Year","handle1YearButton","handle3Year","handle3YearButton","handle5Year","handle5YearButton","handle10Year","handle10YearButton","handleMax","handleMaxButton","indices","values_1","values_2","i","Math","random","toFixed","values","getValues","length","labels","datasets","label","fill","backgroundColor","borderColor","borderWidth","pointRadius","hitRadius","cubicInterpolationMode","lineTension","spanGaps","line_chart","chartFontSize","isTablet","isMobile","getData","height","options","legend","display","scales","xAxes","gridLines","drawBorder","drawOnChartArea","lineWidth","zeroLineWidth","ticks","fontSize","autoSkip","maxTicksLimit","minRotation","maxRotation","yAxes","animation","duration","loading_font_size","style","color","style_card_title","marginTop","marginBottom","marginLeft","card_text","style_period_button","lineHeight","textAlign","isPeriodShown","width","Button","variant","onClick","state","latest_index","card_font_size","Card","Text","latest_value","Body","padding","Title","title","setState","shared","init","codes","index","reqeustYahooFinance","fetchLandPrice","fetch","response","timestamp","d","month","getMonth","day","getDate","year","getFullYear","join","React","Component","LandPriceCard","prices","YahooFinanceCard","fetchData","prevDate","getPrevDate","adjclose","indicators","date","formatDate","parseFloat","ComparisonCard","value","data_1","data_2","split","key","biggerMinDate","ts_index","v","normalize","arr","is_std","mean","d3","std","App","dow_jones_index_card","kospi_index_card","exchange_rate_card","land_price_card","gold_index_card","isProduction","isLandShown","text","today","app_title","class_app_header","className","name","content","Navbar","expand","Brand","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae024b3c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet useProxy = true;\r\nlet isProduction = true;\r\nlet isLandShown = true;\r\n\r\nclass RequestData {\r\n  code = undefined;\r\n  handler = undefined;\r\n\r\n  constructor(c, h) {\r\n    this.code = c;\r\n    this.handler = h;\r\n  }\r\n}\r\n\r\nexport class DataModel {\r\n  static instance = null;\r\n\r\n  proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n  data = {}\r\n  timerInterval = 100;\r\n  timerLongInterval = 2000;\r\n  requestedCode = [];\r\n  fetchingCode = undefined;\r\n\r\n  constructor() {\r\n    console.log(useProxy ? 'enabled' : 'disabled');\r\n    window.setTimeout(this.timerHandler, this.timerInterval, this);\r\n  }\r\n\r\n  isProduction() {\r\n    return isProduction;\r\n  }\r\n\r\n  isLandShown() {\r\n    return isLandShown;\r\n  }\r\n\r\n  init() {}\r\n\r\n  static shared() {\r\n    if (DataModel.instance == null) {\r\n      DataModel.instance = new DataModel();\r\n    }\r\n\r\n    return this.instance;\r\n  }\r\n\r\n  getProxy() {\r\n    if (useProxy) {\r\n      return this.proxyUrl;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  timerHandler(self) {\r\n    // if something is being fetched, wait more\r\n    if (self.fetchingCode !== undefined) {\r\n      window.setTimeout(self.timerHandler, self.timerInterval, self);\r\n      //console.log(self.fetchingCode, 'is being fetched, wait more');\r\n      return;\r\n    }\r\n\r\n    // if queue is empty, wait more\r\n    if (self.requestedCode[0] === undefined) {\r\n      window.setTimeout(self.timerHandler, self.timerLongInterval, self);\r\n      return;\r\n    }\r\n\r\n    var request = self.requestedCode.shift();\r\n    var code = request.code;\r\n    if (self.data[code] !== undefined) {\r\n      //console.log(code, 'is already fetched, do not fetch again');\r\n      request.handler.handleResponse(code, self.data[code]);\r\n      window.setTimeout(self.timerHandler, self.timerInterval, self);\r\n      return;\r\n    }\r\n\r\n    self.fetchingCode = code;\r\n\r\n    self.fetchYahooFinance(request);\r\n    window.setTimeout(self.timerHandler, self.timerInterval, self);\r\n  }\r\n\r\n  fetchYahooFinance(request) {\r\n    //console.log('fetching', code);\r\n    var code = encodeURI(request.code);\r\n\r\n    var begin_date = (Date.parse('2000-01-01') / 1000).toString();\r\n    var end_date = Date.now().toString();\r\n\r\n    var targetUrl = 'https://query1.finance.yahoo.com/v8/finance/chart/' + code + '?period1=' + begin_date + '&period2=' + end_date + '&interval=1d';\r\n\r\n    var x = new XMLHttpRequest();\r\n    x.open('GET', this.getProxy() + targetUrl);\r\n\r\n    var self = this;\r\n    x.onload = x.onerror = function() {\r\n      if (x.status === 404) return;\r\n      code = decodeURI(code);\r\n      var result = JSON.parse(x.responseText);\r\n      result = result.chart.result[0];\r\n\r\n      self.data[code] = result;\r\n      //console.log(code, result);\r\n      self.fetchingCode = undefined;\r\n\r\n      request.handler.handleResponse(code, result);\r\n    };\r\n    x.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n    x.send('');\r\n  }\r\n\r\n  store(code, json) {\r\n    console.log(code, 'is stored');\r\n    this.data[code] = json;\r\n  }\r\n\r\n  load(code) {\r\n    var result = this.data[code];\r\n    if (result != null) {\r\n      console.log(code, 'is loaded');\r\n    }\r\n    return result;\r\n  }\r\n\r\n  reqeustYahooFinance(code, handler) {\r\n    this.requestedCode.push(new RequestData(code, handler));\r\n  }\r\n}\r\n\r\nclass DataSource extends React.Component {\r\n  proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    DataModel.shared().init();\r\n\r\n    this.state = {\r\n      data: [],\r\n      latest_index: undefined,\r\n      latest_value: 0,\r\n      period: '1y'\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  getProxy() {\r\n    if (useProxy) {\r\n      return this.proxyUrl;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  fetchData(codes) {\r\n    for (var index in codes) {\r\n      var code = codes[index];\r\n\r\n      if (code === 'chartGetHousePrice') {\r\n        this.fetchLandPrice();\r\n        continue;\r\n      }\r\n\r\n      DataModel.shared().reqeustYahooFinance(code, this);\r\n    }\r\n  }\r\n\r\n  async fetchLandPrice() {\r\n    try {\r\n      const response = await fetch(`https://api.jonghyunho.com/v1/chartGetHousePrice`);\r\n      const json = await response.json();\r\n      this.setState({ data: json });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleResponse(code, result) {\r\n    result[code] = result;\r\n    this.setState({ data: result });\r\n  }\r\n\r\n  formatDate(timestamp) {\r\n    var d = new Date(timestamp * 1000),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('.');\r\n  }\r\n\r\n  getPrevDate(period) {\r\n    if (period === '3m') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 3) / 1000;\r\n    } else if (period === '6m') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 6) / 1000;\r\n    } else if (period === '1y') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 12) / 1000;\r\n    } else if (period === '3y') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 12 * 3) / 1000;\r\n    } else if (period === '5y') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 12 * 5) / 1000;\r\n    } else if (period === '10y') {\r\n      return new Date(new Date() - 86400 * 1000 * 30 * 12 * 10) / 1000;\r\n    }\r\n    return Date.parse('2000-01-01') / 1000;\r\n  }\r\n}\r\n\r\nexport function formatDate(timestamp) {\r\n  var d = new Date(timestamp * 1000),\r\n  month = '' + (d.getMonth() + 1),\r\n  day = '' + d.getDate(),\r\n  year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('.');\r\n}\r\n\r\nexport default DataSource;","import React from 'react';\r\n\r\nimport { isMobile, isTablet } from 'react-device-detect';\r\nimport { Button, Card, Nav } from 'react-bootstrap';\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport DataSource from './DataSource';\r\n\r\nclass ContentCard extends DataSource {\r\n  period = '1y';\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handle3Month = this.handle3MonthButton.bind(this);\r\n    this.handle6Month = this.handle6MonthButton.bind(this);\r\n    this.handle1Year = this.handle1YearButton.bind(this);\r\n    this.handle3Year = this.handle3YearButton.bind(this);\r\n    this.handle5Year = this.handle5YearButton.bind(this);\r\n    this.handle10Year = this.handle10YearButton.bind(this);\r\n    this.handleMax = this.handleMaxButton.bind(this);\r\n  }\r\n\r\n  getValues() {\r\n    var indices = [];\r\n    var values_1 = [];\r\n    var values_2 = [];\r\n    for (var i = 0; i < 10; i++) {\r\n      indices.push(i.toString());\r\n      values_1.push((Math.random() * 50).toFixed(2));\r\n      values_2.push((Math.random() * 50).toFixed(2));\r\n    }\r\n\r\n    return [indices, values_1, values_2];\r\n  }\r\n\r\n  static defaultProps() {\r\n    return {\r\n      isPeriodShown: 'true'\r\n    }\r\n  }\r\n\r\n  getData() {\r\n    var values = this.getValues();\r\n    if (values[0].length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const data = {\r\n      labels: values[0],\r\n      datasets: [\r\n        {\r\n          label: '',\r\n          data: values[1],\r\n          fill: false,\r\n          backgroundColor: '#1e6eff',\r\n          borderColor: '#1e6eff',\r\n          borderWidth: 1.5,\r\n          pointRadius: 0,\r\n          hitRadius: 5,\r\n          cubicInterpolationMode: 'monotone',\r\n          lineTension: 0.1,\r\n          spanGaps: true\r\n        }\r\n      ]\r\n    };\r\n\r\n    return data    \r\n  }\r\n\r\n  render() {\r\n    var chartFontSize = 16;\r\n    if (isTablet);\r\n    if (isMobile) chartFontSize = 8;\r\n\r\n    let line_chart;\r\n    let data = this.getData();\r\n    if (data != null) {\r\n      line_chart =\r\n        <Line\r\n          data={data}\r\n          height={150}\r\n          options={{\r\n            legend: {\r\n              display: false\r\n            },\r\n            scales: {\r\n              xAxes: [{\r\n                gridLines: {\r\n                  drawBorder: true,\r\n                  drawOnChartArea: true,\r\n                  lineWidth: 0.0,\r\n                  zeroLineWidth: 0.5\r\n                },\r\n                ticks: {\r\n                  fontSize: chartFontSize,\r\n                  autoSkip: true,\r\n                  maxTicksLimit: 2,\r\n                  minRotation: 0,\r\n                  maxRotation: 0\r\n                }\r\n              }],\r\n              yAxes: [{\r\n                ticks: {\r\n                  fontSize: chartFontSize\r\n                },\r\n                gridLines: {\r\n                  drawOnChartArea: true,\r\n                  lineWidth: 0.2,\r\n                  zeroLineWidth: 0.5\r\n                }\r\n              }]\r\n            },\r\n            animation: {\r\n              duration: 0\r\n            }\r\n        }}></Line>\r\n    } else {\r\n      var loading_font_size = '18px';\r\n      if (isTablet);\r\n      if (isMobile) loading_font_size = '11px';\r\n      line_chart = <h6 style={{ fontSize:loading_font_size, color:'#333333' }}>데이터 로딩 중...</h6>\r\n    }\r\n\r\n    var style_card_title = { marginTop:'0.15rem', marginBottom:'0.5rem', marginLeft:'0.15rem'};\r\n    if (isTablet);\r\n    if (isMobile) style_card_title = { fontSize:'12px', marginTop:'0.15rem', marginBottom:'0.5rem', marginLeft:'0.15rem'};\r\n\r\n    var style_period_button = { fontSize:'16px', height:'25px', lineHeight:'13px', textAlign:'center' };\r\n    if (isTablet);\r\n    if (isMobile) style_period_button = { fontSize:'10px', height:'20px', lineHeight:'6px', textAlign:'center' };\r\n\r\n    let period;\r\n    if (this.props.isPeriodShown === 'true' || this.props.isPeriodShown === undefined) {\r\n      period =\r\n        <>\r\n          <div style={{ width:'100%', height:'0.5rem' }}></div>\r\n          <center>\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle3Month}>3개월</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle6Month}>6개월</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle1Year}>1년</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle3Year}>3년</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle5Year}>5년</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handle10Year}>10년</Button>{' '}\r\n          <Button variant=\"light\" style={style_period_button} onClick={this.handleMax}>최대</Button>{' '}\r\n          </center>\r\n        </>\r\n    }\r\n\r\n    let card_text;\r\n    if (this.state.latest_index != undefined) {\r\n      var card_font_size = '18px';\r\n      if (isTablet);\r\n      if (isMobile) card_font_size = '11px';\r\n      card_text = <Card.Text style={{ fontSize:card_font_size, color:'#999999', marginLeft:'0.15rem', marginBottom:'1.0rem' }}>{this.state.latest_index} : { this.state.latest_value}</Card.Text>\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width:'96%', marginBottom:'10px', marginLeft:'2%' }}>\r\n          <Card.Body style={{ padding:'0.75em'}}>\r\n            <Card.Title style={style_card_title}>{this.props.title}</Card.Title>\r\n              { card_text }\r\n            <Card.Text></Card.Text>\r\n            { line_chart }\r\n            { period }\r\n            <div style={{ width:'100%', height:'0.15rem' }}></div>\r\n          </Card.Body>\r\n        </Card>\r\n    )\r\n  }\r\n\r\n  handle3MonthButton() { this.setState({ period: '3m' }); }\r\n  handle6MonthButton() { this.setState({ period: '6m' }); }\r\n  handle1YearButton() { this.setState({ period: '1y' }); }\r\n  handle3YearButton() { this.setState({ period: '3y' }); }\r\n  handle5YearButton() { this.setState({ period: '5y' }); }\r\n  handle10YearButton() { this.setState({ period: '10y' }); }\r\n  handleMaxButton() { this.setState({ period: 'Max' }); }\r\n}\r\n\r\nexport default ContentCard;","import ContentCard from './ContentCard';\r\n\r\nclass LandPriceCard extends ContentCard {\r\n  constructor() {\r\n    super();\r\n    this.state = { data: [] };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.fetchLandPrice();\r\n  }\r\n\r\n  getValues() {\r\n    var indices = [];\r\n    var values = [];\r\n\r\n    var result = this.state.data;\r\n    if (result.length === 0) return [indices, values]\r\n\r\n    var latest_index, latest_value;\r\n    for (var index in result.prices) {\r\n      latest_index = result.prices[index][0];\r\n      latest_value = result.prices[index][1].toFixed(2);\r\n\r\n      indices.push(latest_index);\r\n      values.push(latest_value);\r\n    }\r\n\r\n    this.state.latest_index = latest_index;\r\n    this.state.latest_value = latest_value;\r\n\r\n    return [indices, values];\r\n  }\r\n}\r\n\r\nexport default LandPriceCard;","import './App.css';\r\n\r\nimport ContentCard from './ContentCard';\r\n\r\nclass YahooFinanceCard extends ContentCard {\r\n  async componentDidMount() {\r\n    this.fetchData([this.props.code]);\r\n    return;\r\n  }\r\n\r\n  getValues() {\r\n    let code = this.props.code;\r\n\r\n    var indices = [];\r\n    var values = [];\r\n\r\n    var result = this.state.data;\r\n    if (result.length === 0) return [indices, values];\r\n\r\n    result = result[code];\r\n\r\n    let prevDate = this.getPrevDate(this.state.period);\r\n    var adjclose = result.indicators.adjclose[0].adjclose;\r\n\r\n    var latest_index, latest_value;\r\n    for (var index in result.timestamp) {\r\n      var date = result.timestamp[index];\r\n      if (date < prevDate) continue;\r\n\r\n      latest_index = this.formatDate(date);\r\n      latest_value = parseFloat(adjclose[index]).toFixed(2);\r\n\r\n      indices.push(latest_index);\r\n      values.push(latest_value);\r\n    }\r\n\r\n    this.state.latest_index = latest_index;\r\n    this.state.latest_value = latest_value;\r\n\r\n    return [indices,values];\r\n  }\r\n}\r\n\r\nexport default YahooFinanceCard;","import './App.css';\r\n\r\nimport ContentCard from './ContentCard';\r\n\r\nimport * as d3 from 'd3';\r\n\r\nclass ComparisonCard extends ContentCard {\r\n  json = {}\r\n  value = {}\r\n  codes = []\r\n  labels = []\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      period: '1y',\r\n      data_1: [],\r\n      data_2: []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.codes = this.props.codes.split(' ');\r\n    this.labels = this.props.labels.split(' ');\r\n    this.fetchData(this.codes);\r\n    return;\r\n  }\r\n\r\n  getValues() {\r\n    this.state.latest_index = undefined;\r\n\r\n    var indices = [];\r\n    var values_1 = [];\r\n    var values_2 = [];\r\n\r\n    var response = this.state.data;\r\n\r\n    for (var key in response) {\r\n      this.json[key] = response[key];\r\n    }\r\n\r\n    for (var index in this.codes) {\r\n      var code = this.codes[index];\r\n      var result = this.json[code];\r\n      if (result === undefined) {\r\n        return [[], [], []];\r\n      }\r\n    }\r\n\r\n    var biggerMinDate = 0;\r\n\r\n    for (index in this.codes) {\r\n      code = this.codes[index];\r\n      result = this.json[code];\r\n      var adjclose = result.indicators.adjclose[0].adjclose;\r\n\r\n      if (result.timestamp.length > 0) {\r\n        if (biggerMinDate < result.timestamp[0]) {\r\n          biggerMinDate = result.timestamp[0];\r\n        }\r\n      }\r\n\r\n      for (var ts_index in result.timestamp) {\r\n        var date = result.timestamp[ts_index];\r\n        if (index == 0) {\r\n          this.value[date] = [parseFloat(adjclose[ts_index]).toFixed(2) * 1, undefined];\r\n        } else {\r\n          var v = this.value[date];\r\n          if (v != undefined) v = v[0];\r\n          this.value[date] = [v, parseFloat(adjclose[ts_index]).toFixed(2) * 1];\r\n        }\r\n      }\r\n    }\r\n\r\n    let prevDate = this.getPrevDate(this.state.period);\r\n\r\n    for (date in this.value) {\r\n      if (date < prevDate) continue;\r\n      if (date < biggerMinDate) continue;\r\n      indices.push(this.formatDate(date));\r\n\r\n      var values = this.value[date];\r\n      values_1.push(values[0]);\r\n      values_2.push(values[1]);\r\n    }\r\n\r\n    values_1 = this.normalize(values_1);\r\n    values_2 = this.normalize(values_2);\r\n\r\n    return [indices, values_1, values_2];\r\n  }\r\n\r\n  normalize(arr, is_std = true) {\r\n    var mean = d3.mean(arr);\r\n    var std = d3.deviation(arr);\r\n\r\n    for (var index in arr) {\r\n      var value = arr[index];\r\n      arr[index] = ((value - mean) / (is_std ? std : 1.0)).toFixed(2) * 1;\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  getData() {\r\n    var values = this.getValues();\r\n    if (values[0].length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const data = {\r\n      labels: values[0],\r\n      datasets: [\r\n        {\r\n          label: this.labels[0],\r\n          data: values[1],\r\n          fill: false,\r\n          backgroundColor: '#1e6eff',\r\n          borderColor: '#1e6eff',\r\n          borderWidth: 1.5,\r\n          pointRadius: 0,\r\n          hitRadius: 2,\r\n          cubicInterpolationMode: 'monotone',\r\n          lineTension: 0.1,\r\n          spanGaps: true\r\n        },\r\n        {\r\n          label: this.labels[1],\r\n          data: values[2],\r\n          fill: false,\r\n          backgroundColor: '#ff7245',\r\n          borderColor: '#ff7245',\r\n          borderWidth: 1.5,\r\n          pointRadius: 0,\r\n          hitRadius: 2,\r\n          cubicInterpolationMode: 'monotone',\r\n          lineTension: 0.1,\r\n          spanGaps: true\r\n        }\r\n      ]\r\n    };\r\n\r\n    return data\r\n  }\r\n}\r\n\r\nexport default ComparisonCard;","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n//import { render } from '@testing-library/react';\nimport MetaTags from 'react-meta-tags';\nimport { isMobile, isTablet } from 'react-device-detect';\n\nimport './App.css';\n\nimport ContentCard from './ContentCard';\nimport LandPriceCard from './LandPriceCard';\n\nimport { DataModel, formatDate } from './DataSource';\n\nimport YahooFinanceCard from './YahooFinanceCard';\nimport ComparisonCard from './ComparisonCard';\n\nfunction App() {\n  let dow_jones_index_card;\n  let kospi_index_card;\n  let exchange_rate_card;\n  let land_price_card;\n  let gold_index_card;\n\n  if (DataModel.shared().isProduction()) {\n    if (DataModel.shared().isLandShown()) {\n      land_price_card = <LandPriceCard title='서울 부동산 매매가격지수' text='서울 부동산 매매 가격의 등락을 시각화한다.' isPeriodShown='false'></LandPriceCard>\n    }\n\n    dow_jones_index_card = <YahooFinanceCard code='^DJI' title='다우존스 지수' text='다우존스 지수를 시각화한다.'></YahooFinanceCard>\n    kospi_index_card = <YahooFinanceCard code='^KS11' title='코스피 지수' text='코스피 지수를 시각화한다.'></YahooFinanceCard>\n    exchange_rate_card = <YahooFinanceCard code='KRW=X' title='환율' text='원/달러 환율'></YahooFinanceCard>\n    gold_index_card = <YahooFinanceCard code='GC=F' title='금 지수' text='금 지수를 시각화한다.'></YahooFinanceCard>\n  } else {\n    kospi_index_card = <YahooFinanceCard code='^KS11' title='코스피 지수' text='코스피 지수를 시각화한다.'></YahooFinanceCard>\n  }\n\n  let today = formatDate(Date.now() / 1000);\n  var app_title = <h3>{today}</h3>;\n  if (isTablet) ;\n  else if (isMobile) app_title = <h6>{today}</h6>;\n\n  var class_app_header = 'App-header';\n  if (isTablet) ;\n  else if (isMobile) class_app_header = 'Mobile-App-header';\n\n  return (\n    <div className=\"App\">\n      <MetaTags>\n        <meta name='viewport' content='width=device-width, user-scalable=no'/>\n        <meta name='theme-color' content='#f2f2f2'/>\n      </MetaTags>\n      <header className={class_app_header}>\n        <Navbar expand='lg' style={{ padding:'0.5rem 2.5%' }}>\n          <Navbar.Brand href=\"#\">{app_title}</Navbar.Brand>\n        </Navbar>\n\n        { land_price_card }\n        { kospi_index_card }\n        { dow_jones_index_card }\n        {/*<YahooFinanceCard code='^GSPC' title='S&P 500' text='S&P 500'></YahooFinanceCard>*/}\n        {/*<YahooFinanceCard code='^IXIC' title='나스닥 지수' text='나스닥 지수'></YahooFinanceCard>*/}\n        { gold_index_card }\n        { exchange_rate_card }\n        <ComparisonCard codes='^KS11 KRW=X' labels='코스피 환율' title='코스피와 환율' text='코스피와 환율'></ComparisonCard>\n        <ComparisonCard codes='KRW=X CNY=X' labels='원/달러 위안/달러' title='(원/달러)와 (위안/달러)의 환율 비교' text='원/달러 위안/달러 환율 비교'></ComparisonCard>\n        <ComparisonCard codes='^KS11 000001.SS' labels='코스피 상해종합' title='코스피와 상해종합' text='코스피와 상해종합'></ComparisonCard>\n        <ComparisonCard codes='^KS11 ^HSI' labels='코스피 항셍' title='코스피와 항셍' text='코스피와 항셍'></ComparisonCard>\n        <ComparisonCard codes='^KS11 ^N225' labels='코스피 니케이225' title='코스피와 니케이225' text='코스피와 니케이225'></ComparisonCard>\n        {/*<ContentCard title='경제 지표의 상관관계 (준비중)' text='경제 지표를 상관관계지수를 통해 시각화한다.'></ContentCard>*/}\n        {/*<ContentCard title='주식과 부동산 (준비중)' text='주식과 부동산 어느 지표가 더 저평가 되어 있나?'></ContentCard>*/}\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}